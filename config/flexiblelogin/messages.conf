# When an account already exists, and therefore cannot be created.
accountAlreadyExists="§4Account already exists"
# When the player successfully created his/her account.
accountCreated="§2Account created"
# When an account was successfully deleted
accountDeleted="§2Deleted account of %s"
# When a player's account does not exist.
accountNotFound="§4Account not found"
# Another player with the same name tried to join the server while that player is still online
alreadyOnline="§2You are already online"
# Message if the player changed his account password successfully
changePassword="§2Successfull changed password"
# When the player successfully used the set email command and set his/her email.
emailSet="§2Your email was set."
# When an unexpected error occurs. (Should not happen)
errorExecutingCommand="§4Error executing command, see console."
# Force register failed because the player is online
forceRegisterOnline="§2Cannot force register player. That player is online"
# Successfull force registered an account
forceRegisterSuccess="§4Force register success"
# When a player enters an incorrect password.
incorrectPassword="§4Incorrect password"
# When a player joined with a non Mojang valid username
invalidUsername="§4Invalid username - Choose characters a-z,A-Z,0-9 and a length between 2 and 16"
# When the player is auto logged in by using the same ip as the last login
ipAutoLogin="§2Auto logged in"
# When a secretkey is created (header).
keyGenerated="§2SecretKey genereted: "
# When a player successfully logs in.
loggedIn="§2Logged in"
# Whe the player successfully logs out of his/her account.
loggedOut="§2Logged out."
# When the recovery email was sent!
mailSent="§2Email sent"
# User reached max attempts
maxAttempts="§2You entered too many times a wrong password"
# User reached the max ip registrations
maxIpReg="§2You reached the max amount of registrations for this ip-address"
# When the player enters an email that does not exist.
notEmail="§4You have entered in an invalid email!"
# When the player is not logged in of his/her account.
notLoggedIn="§4Not logged in. Type /login to login in"
# When the player is not logged in of his/her account.
notRegistered="§4Not registered. Type /register to register"
# Admin reloaded the plugin
onReload="§4Successfull reloaded plugin"
# If the player is logged in, it is then pointless to use the forgot password command
playersAccountAlreadyLoggedIn="§4You are already logged in!"
# When the account does not exist on the account database.
playersAccountNotLoaded="§4Your account cannot be loaded."
# You can use the Github wiki for example configurations: https://github.com/games647/FlexibleLogin/wiki 
# 
# When a non-player (i.e. Console, Command Block) tries to do a player only action.
playersOnly="§4Only players can do this!"
# When the user tries to execute a protected command if command only protection is enabled
protectedCommand="§4This command is protected. Please login"
# When a player registered using TOTP and the code can be scanned by clicking on it
scanQr="§6Click here to scan the QR-Code"
# Kick message if the player doesn't logged during the configured time out seconds
timeoutReason="§4Login timeout"
# Message if the player has to register with a longer password
tooShortPassword="§2Your password is too short"
# When totp is not enabled.
totpNotEnabled="§4Totp is not enabled. You have to enter two passwords."
# When the player did not or forgot to submit an email address used to recover a password.
uncommittedEmailAddress="§4You did not submit an email address!"
# When the two passwords typed do not match each other.
unevenPasswords="§4The passwords are not equal."
# When the unregister process failed.
unregisterFailed="§4Your request is neither a player name or uuid."
